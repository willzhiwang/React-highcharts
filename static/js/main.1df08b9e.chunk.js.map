{"version":3,"sources":["assets/stackline_logo.svg","components/Header.js","reducers/salesReducers.js","reducers/index.js","store.js","components/DescriptionPanel.js","components/GraphPanel.js","apis/getRetailSales.js","page/RetailSales.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","alt","src","require","initialState","id","title","image","subtitle","brand","reviews","retailer","details","tags","sales","combineReducers","salesData","state","action","type","payload","loading","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","DescriptionPanel","name","useSelector","description","width","height","map","tag","i","GraphPanel","retailSales","sale","Date","parse","weekEnding","wholesaleSales","options","text","yAxis","min","labels","enabled","xAxis","UTC","max","formatter","Highcharts","this","value","plotOptions","series","connectNulls","cursor","pointInterval","undefined","pointStart","data","marker","highcharts","HighchartsReact","Props","getData","a","console","log","RetailSales","dispatch","useDispatch","useState","stateAPIStatus","setAPIStatus","useEffect","then","catch","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df08b9e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stackline_logo.5935081b.svg\";","import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<img className=\"logo\" alt=\"Logo\" src={require('../assets/stackline_logo.svg')} />\n\t\t</div>\n\t);\n};\n\nexport default Header;\n","const initialState = {\n\tid: '',\n\ttitle: '',\n\timage: '',\n\tsubtitle: '',\n\tbrand: '',\n\treviews: [],\n\tretailer: '',\n\tdetails: [],\n\ttags: [],\n\tsales: [],\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'GET_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport salesReducers from './salesReducers';\nexport default combineReducers({\n\tsalesData: salesReducers,\n});\n","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\n\nexport default store;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst DescriptionPanel = () => {\n\tconst name = useSelector((state) => state.salesData.title);\n\tconst image = useSelector((state) => state.salesData.image);\n\tconst description = useSelector((state) => state.salesData.subtitle);\n\tconst tags = useSelector((state) => state.salesData.tags);\n\n\treturn (\n\t\t<div className=\"panel description-panel\">\n\t\t\t<img src={image} alt=\"Profile\" width=\"120\" height=\"120\" />\n\t\t\t<h4 className=\"name\">{name}</h4>\n\t\t\t<p className=\"description\">{description}</p>\n\t\t\t<div className=\"tags\">\n\t\t\t\t{tags.map((tag, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={`${tag}-${i}`} className=\"tag\">\n\t\t\t\t\t\t\t{tag}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DescriptionPanel;\n","import React from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { useSelector } from 'react-redux';\n\nconst GraphPanel = () => {\n\tconst sales = useSelector((state) => state.salesData.sales);\n\n\tconst retailSales = sales.map((sale) => {\n\t\tconst newData = [Date.parse(sale.weekEnding), sale.retailSales];\n\t\treturn newData;\n\t});\n\tconst wholesaleSales = sales.map((sale) => {\n\t\tconst newData = [Date.parse(sale.weekEnding), sale.wholesaleSales];\n\t\treturn newData;\n\t});\n\n\tconst options = {\n\t\ttitle: {\n\t\t\ttext: 'Retail Sales',\n\t\t},\n\t\tyAxis: {\n\t\t\tmin: 0,\n\t\t\tlabels: {\n\t\t\t\tenabled: false,\n\t\t\t},\n\t\t},\n\t\txAxis: {\n\t\t\ttype: 'datetime',\n\t\t\tmin: Date.UTC(2017, 0, 1),\n\t\t\tmax: Date.UTC(2017, 11, 31),\n\t\t\tlabels: {\n\t\t\t\tformatter: function () {\n\t\t\t\t\treturn Highcharts.dateFormat('%b', this.value);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tplotOptions: {\n\t\t\tseries: {\n\t\t\t\tconnectNulls: true,\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tpointInterval: undefined,\n\t\t\t\tpointStart: undefined,\n\t\t\t},\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\tname: 'Retail Sales',\n\t\t\t\ttype: 'line',\n\t\t\t\tdata: retailSales,\n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Wholesale Sales',\n\t\t\t\ttype: 'line',\n\t\t\t\tdata: wholesaleSales,\n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t};\n\treturn (\n\t\t<div className=\"panel\">\n\t\t\t<HighchartsReact highcharts={Highcharts} options={options} {...HighchartsReact.Props} />\n\t\t</div>\n\t);\n};\n\nexport default GraphPanel;\n","export const getData = async () => {\n  try {\n    // mock API call\n    const salesData = require('../mock/stackline_frontend_assessment_data_2021.json');\n    return salesData\n  } catch (error) {\n    console.log(\"error...\", error);\n  }\n}","import React, { useEffect, useState } from 'react';\nimport DescriptionPanel from '../components/DescriptionPanel';\nimport GraphPanel from '../components/GraphPanel';\nimport { getData } from '../apis/getRetailSales';\nimport { useDispatch } from 'react-redux';\n\nconst RetailSales = () => {\n\tconst dispatch = useDispatch();\n\tconst [stateAPIStatus, setAPIStatus] = useState('idle');\n\n\tuseEffect(() => {\n\t\tsetAPIStatus('loading');\n\n\t\tgetData()\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'GET_DATA',\n\t\t\t\t\tpayload: data[0],\n\t\t\t\t});\n\t\t\t\tsetAPIStatus('success');\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetAPIStatus('error');\n\t\t\t});\n\t}, [dispatch]);\n\n\treturn (\n\t\t<div className=\"body\">\n\t\t\t{stateAPIStatus === 'success' && (\n\t\t\t\t<>\n\t\t\t\t\t<DescriptionPanel />\n\t\t\t\t\t<div className=\"graph-panel\">\n\t\t\t\t\t\t<GraphPanel />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default RetailSales;\n","import './App.css';\nimport Header from './components/Header';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport RetailSales from './page/RetailSales';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Provider store={store}>\n\t\t\t\t<Header />\n\t\t\t\t<RetailSales />\n\t\t\t</Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}